#! Generated by VisualDCT v2.6
#! DBDSTART
#! DBD("../../dbd/laudaRE2xx.dbd")
#! DBDEND


################################################################
#
# Lauda Ecoline Staredition RE2xx template file.
#
# Macros:
# % macro,  P,    Prefix for PV name
# % macro,  PORT, Bus/Port Address (eg. ASYN Port).
# % macro,  ADDR, Address on the bus (optional)
# % macro,  SCAN, SCAN rate for read parameters.
# % macro,  HIHI, HIHI value for input temperature
# % macro,  HIGH, HIGH value for input temperature
# % macro,  LOW,  LOW value for input temperature
# % macro,  LOLO, LOLO value for input temperature
# % macro,  name, object and gui association name
# % macro,  EDM_FILE, EDM file: can be lRE2xx.edl or lIntegralT.edl
#
# Notes:
#   Temperature reading is handled by the alarm handler
#
################################################################
# % gui, $(name=), edmembed, lRE2xx_embed.edl, P=$(P),EDM_FILE=$(EDM_FILE=lRE2xx.edl)
# % gui, $(name=), edm, $(EDM_FILE=lRE2xx.edl), P=$(P)
################################################################
# Read records
################################################################
# ///
# /// Read the water temperature.
# ///
#% archiver 10 Monitor
#% alh $SEVRCOMMAND UP_ANY /dls_sw/tools/bin/dls-alh-handler.py $(P):TEMP
record(ai, "$(P):TEMP") {
  field(DTYP, "stream")
  field(INP, "@lRE2xx.proto getTemp $(PORT) $(ADDR)")
  field(SCAN, "$(SCAN) second")
  field(EGU, "C")
  field(HIHI, "$(HIHI)")
  field(HIGH, "$(HIGH)")
  field(LOW, "$(LOW)")
  field(LOLO, "$(LOLO)")
  field(HHSV, "MAJOR")
  field(HSV, "MINOR")
  field(LSV, "MINOR")
  field(LLSV, "MAJOR")
  field(PREC, "2")
  field(HYST, "0.1")
  field(SDIS, "$(P):DISABLE")
}

# ///
# /// Read the status bits.
# ///
#% archiver 10 Monitor
#% alh $SEVRCOMMAND UP_ANY /dls_sw/tools/bin/dls-alh-handler.py $(P):STATUS
record(ai, "$(P):STATUS") {
  field(DTYP, "stream")
  field(INP, "@lRE2xx.proto getStatus $(PORT) $(ADDR)")
  field(SCAN, "$(SCAN) second")
  field(FLNK, "$(P):STATUS:FAN")
  field(HHSV, "MAJOR")
  field(HIHI, "1")
  field(SDIS, "$(P):DISABLE")
}

record(fanout, "$(P):STATUS:FAN") {
  field(LNK1, "$(P):STATUS:B5")
}

# ///
# /// Read the over temperature status bit
# ///
record(ai, "$(P):STATUS:B5") {
  field(INP, "$(P):STATUS >> 4")
}

################################################################
# Write records
################################################################
# ///
# /// Set the setpoint water temperature (temperature must be specific format (up to 3 digits before decimal point and up to 2 digits after decimal point).
# ///
#% autosave 1 VAL
record(ao, "$(P):SET_TEMP") {
  field(DTYP, "stream")
  field(DESC, "Setpoint temperature")
  field(OUT, "@lRE2xx.proto setTemp $(PORT) $(ADDR)")
  field(SDIS, "$(P):DISABLE")
}

#################################################################
# Generic protocol PV, to send any command.
#################################################################
# ///
# /// Generic commands. Do a caput on this, and do a subsequent caget to get the response. Max 39 chars.
# ///
record(stringin, "$(P):RESPONSE") {
  field(DTYP, "stream")
  field(DESC, "Command string response.")
  field(INP, "@lRE2xx.proto gen $(PORT) $(ADDR)")
  field(SDIS, "$(P):DISABLE")
}

# ///
# /// Generic command. This holds the command and stores it.
# ///
record(stringout, "$(P):COMMAND") {
  field(DESC, "Holds command string.")
  field(OUT, "$(P):RESPONSE")
  field(FLNK, "$(P):RESPONSE")
}

# % autosave 1 VAL
record(bo, "$(P):DISABLE") {
  field(DESC, "Disable comms")
  field(PINI, "YES")
  field(VAL, "1")
  field(OMSL, "supervisory")
  field(ZNAM, "Enabled")
  field(ONAM, "Disabled")
}

#! Further lines contain data used by VisualDCT
#! View(0,0,1.0)
#! Record("$(P):TEMP",40,35,0,0,"$(P):TEMP")
#! Field("$(P):TEMP.SDIS",16777215,1,"$(P):TEMP.SDIS")
#! Link("$(P):TEMP.SDIS","$(P):DISABLE.VAL")
#! Record("$(P):STATUS",40,346,0,0,"$(P):STATUS")
#! Field("$(P):STATUS.SDIS",16777215,1,"$(P):STATUS.SDIS")
#! Link("$(P):STATUS.SDIS","$(P):DISABLE.VAL")
#! Field("$(P):STATUS.FLNK",16777215,1,"$(P):STATUS.FLNK")
#! Link("$(P):STATUS.FLNK","$(P):STATUS:FAN")
#! Field("$(P):STATUS.VAL",16777215,1,"$(P):STATUS.VAL")
#! Record("$(P):STATUS:FAN",340,430,0,0,"$(P):STATUS:FAN")
#! Field("$(P):STATUS:FAN.LNK1",16777215,1,"$(P):STATUS:FAN.LNK1")
#! Link("$(P):STATUS:FAN.LNK1","$(P):STATUS:B5")
#! Record("$(P):STATUS:B5",600,470,0,0,"$(P):STATUS:B5")
#! Field("$(P):STATUS:B5.INP",16777215,0,"$(P):STATUS:B5.INP")
#! Link("$(P):STATUS:B5.INP","$(P):STATUS.VAL")
#! Record("$(P):SET_TEMP",280,28,0,0,"$(P):SET_TEMP")
#! Field("$(P):SET_TEMP.SDIS",16777215,1,"$(P):SET_TEMP.SDIS")
#! Link("$(P):SET_TEMP.SDIS","$(P):DISABLE.VAL")
#! Record("$(P):RESPONSE",820,128,0,0,"$(P):RESPONSE")
#! Field("$(P):RESPONSE.VAL",16777215,0,"$(P):RESPONSE.VAL")
#! Field("$(P):RESPONSE.SDIS",16777215,0,"$(P):RESPONSE.SDIS")
#! Link("$(P):RESPONSE.SDIS","$(P):DISABLE.VAL")
#! Record("$(P):COMMAND",540,82,0,0,"$(P):COMMAND")
#! Field("$(P):COMMAND.FLNK",16777215,1,"$(P):COMMAND.FLNK")
#! Link("$(P):COMMAND.FLNK","$(P):RESPONSE")
#! Field("$(P):COMMAND.OUT",16777215,1,"$(P):COMMAND.OUT")
#! Link("$(P):COMMAND.OUT","$(P):RESPONSE.VAL")
#! Record("$(P):DISABLE",320,200,0,1,"$(P):DISABLE")
#! Field("$(P):DISABLE.VAL",16777215,1,"$(P):DISABLE.VAL")
