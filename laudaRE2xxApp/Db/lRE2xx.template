################################################################
#
# Lauda Ecoline Staredition RE2xx template file.
#
# Macros:
#   P - Prefix for PV name
#   PORT - Bus/Port Address (eg. ASYN Port).
#   ADDR - Address on the bus (optional)
#   SCAN - SCAN rate for read parameters.
#
# Notes:
#   Temperature reading is handled by the alarm handler
#
################################################################


################################################################
# Read records
################################################################

# ///
# /// Read the water temperature.
# ///
#% archiver 10 Monitor
#% alh $SEVRCOMMAND UP_ANY /dls_sw/tools/bin/dls-alh-handler.py $(P):TEMP
record(ai, "$(P):TEMP") {
  field(DTYP, "stream")
  field(INP, "@lRE2xx.proto getTemp $(PORT) $(ADDR)")
  field(SCAN, "$(SCAN) second")
  field(PREC, 2)
  field(EGU, "C")
  field(HIHI, "$(HIHI)")
  field(HIGH, "$(HIGH)")
  field(LOW,  "$(LOW)")
  field(LOLO, "$(LOLO)")
  field(HHSV, "MAJOR")
  field(HSV,  "MINOR")
  field(LSV,  "MINOR")
  field(LLSV, "MAJOR")
  field(HYST, 0.1)
}


# ///
# /// Read the status bits.
# ///
#% archiver 10 Monitor
#% alh $SEVRCOMMAND UP_ANY /dls_sw/tools/bin/dls-alh-handler.py $(P):STATUS
record(ai, "$(P):STATUS") {
  field(DTYP, "stream")
  field(INP, "@lRE2xx.proto getStatus $(PORT) $(ADDR)")
  field(SCAN, "$(SCAN) second")
  field(FLNK, "$(P):STATUS:FAN")
  field(HIHI, 1)
  field(HHSV, "MAJOR")
}

record(fanout, "$(P):STATUS:FAN") {
  field(LNK1, "$(P):STATUS:B5")
}


# ///
# /// Read the over temperature status bit
# ///
record(ai, "$(P):STATUS:B5") {
  field(INP, "$(P):STATUS >> 4")
}


################################################################
# Write records
################################################################

# ///
# /// Set the setpoint water temperature (temperature must be specific format (up to 3 digits before decimal point and up to 2 digits after decimal point).
# ///
#% autosave 1 VAL
record(ao, "$(P):SET_TEMP") {
  field(DTYP, "stream")
  field(DESC, "Setpoint temperature")
  field(OUT, "@lRE2xx.proto setTemp $(PORT) $(ADDR)")
}


#################################################################
# Generic protocol PV, to send any command.
#################################################################

# ///
# /// Generic commands. Do a caput on this, and do a subsequent caget to get the response. Max 39 chars.
# ///
record (stringin, "$(P):RESPONSE") {
  field (DTYP, "stream")
  field (DESC, "Holds response from command string.")
  field (INP, "@lRE2xx.proto gen $(PORT) $(ADDR)")
}

# ///
# /// Generic command. This holds the command and stores it.
# ///
record (stringout, "$(P):COMMAND") {
  field (DESC, "Holds command string.")
  field (OUT, "$(P):RESPONSE")
  field(FLNK, "$(P):RESPONSE")
}
